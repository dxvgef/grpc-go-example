// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: content.proto

package pb

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 增加请求
type ContentAddRequest struct {
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Body  string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (m *ContentAddRequest) Reset()         { *m = ContentAddRequest{} }
func (m *ContentAddRequest) String() string { return proto.CompactTextString(m) }
func (*ContentAddRequest) ProtoMessage()    {}
func (*ContentAddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_61cc9617ce0cf609, []int{0}
}
func (m *ContentAddRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContentAddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContentAddRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContentAddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentAddRequest.Merge(m, src)
}
func (m *ContentAddRequest) XXX_Size() int {
	return m.Size()
}
func (m *ContentAddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentAddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContentAddRequest proto.InternalMessageInfo

func (m *ContentAddRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ContentAddRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

// 增加响应
type ContentAddResponse struct {
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *ContentAddResponse) Reset()         { *m = ContentAddResponse{} }
func (m *ContentAddResponse) String() string { return proto.CompactTextString(m) }
func (*ContentAddResponse) ProtoMessage()    {}
func (*ContentAddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_61cc9617ce0cf609, []int{1}
}
func (m *ContentAddResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContentAddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContentAddResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContentAddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentAddResponse.Merge(m, src)
}
func (m *ContentAddResponse) XXX_Size() int {
	return m.Size()
}
func (m *ContentAddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentAddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContentAddResponse proto.InternalMessageInfo

func (m *ContentAddResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 列表请求
type ContentListRequest struct {
	Columns  []string `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	Page     int32    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32    `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (m *ContentListRequest) Reset()         { *m = ContentListRequest{} }
func (m *ContentListRequest) String() string { return proto.CompactTextString(m) }
func (*ContentListRequest) ProtoMessage()    {}
func (*ContentListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_61cc9617ce0cf609, []int{2}
}
func (m *ContentListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContentListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContentListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContentListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentListRequest.Merge(m, src)
}
func (m *ContentListRequest) XXX_Size() int {
	return m.Size()
}
func (m *ContentListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContentListRequest proto.InternalMessageInfo

func (m *ContentListRequest) GetColumns() []string {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *ContentListRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ContentListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// 列表响应
type ContentListResponse struct {
	Rows  []*ContentListModel `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int32               `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (m *ContentListResponse) Reset()         { *m = ContentListResponse{} }
func (m *ContentListResponse) String() string { return proto.CompactTextString(m) }
func (*ContentListResponse) ProtoMessage()    {}
func (*ContentListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_61cc9617ce0cf609, []int{3}
}
func (m *ContentListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContentListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContentListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContentListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentListResponse.Merge(m, src)
}
func (m *ContentListResponse) XXX_Size() int {
	return m.Size()
}
func (m *ContentListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContentListResponse proto.InternalMessageInfo

func (m *ContentListResponse) GetRows() []*ContentListModel {
	if m != nil {
		return m.Rows
	}
	return nil
}

func (m *ContentListResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

// 内容列表字段
type ContentListModel struct {
	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,string" pg:"id"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty" pg:"title"`
	CreateTime int64  `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty" pg:"create_time"`
}

func (m *ContentListModel) Reset()         { *m = ContentListModel{} }
func (m *ContentListModel) String() string { return proto.CompactTextString(m) }
func (*ContentListModel) ProtoMessage()    {}
func (*ContentListModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_61cc9617ce0cf609, []int{4}
}
func (m *ContentListModel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContentListModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContentListModel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContentListModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentListModel.Merge(m, src)
}
func (m *ContentListModel) XXX_Size() int {
	return m.Size()
}
func (m *ContentListModel) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentListModel.DiscardUnknown(m)
}

var xxx_messageInfo_ContentListModel proto.InternalMessageInfo

func (m *ContentListModel) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ContentListModel) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ContentListModel) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func init() {
	proto.RegisterType((*ContentAddRequest)(nil), "pb.ContentAddRequest")
	proto.RegisterType((*ContentAddResponse)(nil), "pb.ContentAddResponse")
	proto.RegisterType((*ContentListRequest)(nil), "pb.ContentListRequest")
	proto.RegisterType((*ContentListResponse)(nil), "pb.ContentListResponse")
	proto.RegisterType((*ContentListModel)(nil), "pb.ContentListModel")
}

func init() { proto.RegisterFile("content.proto", fileDescriptor_61cc9617ce0cf609) }

var fileDescriptor_61cc9617ce0cf609 = []byte{
	// 464 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xcd, 0xda, 0x29, 0x21, 0x03, 0x2d, 0xed, 0x92, 0xb6, 0x56, 0x54, 0x39, 0xd5, 0xaa, 0x87,
	0x08, 0x41, 0x2c, 0x15, 0x4e, 0x95, 0x38, 0x34, 0x5c, 0x29, 0x07, 0x03, 0x57, 0x90, 0x9d, 0x5d,
	0xcc, 0x4a, 0x8e, 0xc7, 0xc4, 0x1b, 0x21, 0x38, 0xf2, 0x05, 0x48, 0x5c, 0xfa, 0x09, 0x7c, 0x0a,
	0xc7, 0x4a, 0x5c, 0x38, 0x45, 0x28, 0xe1, 0xc4, 0x31, 0x5f, 0x80, 0x3c, 0x6b, 0xa7, 0x21, 0x3d,
	0x79, 0xde, 0xdb, 0x37, 0x6f, 0xf6, 0x8d, 0x17, 0xb6, 0x47, 0x98, 0x19, 0x95, 0x99, 0x41, 0x3e,
	0x41, 0x83, 0xdc, 0xc9, 0xe3, 0xee, 0x51, 0x82, 0x98, 0xa4, 0x2a, 0x88, 0x72, 0x1d, 0x44, 0x59,
	0x86, 0x26, 0x32, 0x1a, 0xb3, 0xc2, 0x2a, 0xba, 0x8f, 0x12, 0x6d, 0xde, 0x4f, 0xe3, 0xc1, 0x08,
	0xc7, 0x41, 0x82, 0x09, 0x06, 0x44, 0xc7, 0xd3, 0x77, 0x84, 0x08, 0x50, 0x65, 0xe5, 0xe2, 0x29,
	0xec, 0x3d, 0xb3, 0x13, 0xce, 0xa5, 0x0c, 0xd5, 0x87, 0xa9, 0x2a, 0x0c, 0xef, 0xc0, 0x96, 0xd1,
	0x26, 0x55, 0x1e, 0x3b, 0x66, 0xfd, 0x76, 0x68, 0x01, 0xe7, 0xd0, 0x8c, 0x51, 0x7e, 0xf2, 0x1c,
	0x22, 0xa9, 0x16, 0x27, 0xc0, 0xd7, 0xdb, 0x8b, 0x1c, 0xb3, 0x42, 0xf1, 0x1d, 0x70, 0xb4, 0xa4,
	0x66, 0x37, 0x74, 0xb4, 0x14, 0x6f, 0x56, 0xaa, 0xe7, 0xba, 0x30, 0xf5, 0x14, 0x0f, 0x5a, 0x23,
	0x4c, 0xa7, 0xe3, 0xac, 0xf0, 0xd8, 0xb1, 0xdb, 0x6f, 0x87, 0x35, 0x2c, 0x27, 0xe5, 0x51, 0xa2,
	0x68, 0xd2, 0x56, 0x48, 0x35, 0xef, 0xc2, 0xed, 0xf2, 0xfb, 0x52, 0x7f, 0x56, 0x9e, 0x4b, 0xfc,
	0x0a, 0x8b, 0xd7, 0x70, 0xff, 0x3f, 0xff, 0xea, 0x1a, 0x7d, 0x68, 0x4e, 0xf0, 0xa3, 0x75, 0xbf,
	0x73, 0xda, 0x19, 0xe4, 0xf1, 0x60, 0x4d, 0x76, 0x81, 0x52, 0xa5, 0x21, 0x29, 0x28, 0x30, 0x9a,
	0x28, 0xad, 0x26, 0x5a, 0x20, 0x2e, 0x19, 0xec, 0x6e, 0x36, 0xf0, 0xfe, 0x75, 0xb6, 0xa1, 0xf7,
	0x77, 0xd6, 0x6b, 0x6b, 0xf9, 0xb0, 0x30, 0x13, 0x9d, 0x25, 0xcb, 0x59, 0xaf, 0x95, 0x27, 0x67,
	0x42, 0x4b, 0x51, 0xa6, 0xe6, 0x27, 0xf5, 0x16, 0x69, 0x61, 0xc3, 0x9d, 0xe5, 0xac, 0x07, 0xe5,
	0x39, 0x91, 0xa2, 0xde, 0xea, 0x13, 0x80, 0xd1, 0x44, 0x45, 0x46, 0xbd, 0xd2, 0x63, 0x9b, 0xcc,
	0x1d, 0x76, 0x96, 0xb3, 0xde, 0x6e, 0x29, 0xb5, 0x27, 0x6f, 0x8d, 0x1e, 0x2b, 0x11, 0xae, 0xe9,
	0x4e, 0xbf, 0x33, 0x68, 0x55, 0x57, 0xe3, 0x17, 0xe0, 0x9e, 0x4b, 0xc9, 0xf7, 0xd7, 0xf2, 0x5d,
	0xff, 0xcb, 0xee, 0xc1, 0x26, 0x6d, 0x97, 0x23, 0x0e, 0xbf, 0xfc, 0xfc, 0xf3, 0xcd, 0xd9, 0x13,
	0x77, 0x83, 0xea, 0x85, 0x05, 0x91, 0x94, 0x67, 0xec, 0x01, 0x7f, 0x01, 0xcd, 0x32, 0x2d, 0x3f,
	0xd8, 0xd8, 0x57, 0x6d, 0x78, 0x78, 0x83, 0xaf, 0x1c, 0xf7, 0xc9, 0xf1, 0x1e, 0xdf, 0x5e, 0x39,
	0xa6, 0xba, 0x30, 0xc3, 0xa3, 0x1f, 0x73, 0x9f, 0x5d, 0xcd, 0x7d, 0xf6, 0x7b, 0xee, 0xb3, 0xaf,
	0x0b, 0xbf, 0x71, 0xb9, 0xf0, 0x1b, 0x57, 0x0b, 0xbf, 0xf1, 0x6b, 0xe1, 0x37, 0xe2, 0x5b, 0xf4,
	0x0c, 0x1f, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x79, 0xab, 0x97, 0xa8, 0xe8, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ContentClient is the client API for Content service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContentClient interface {
	Add(ctx context.Context, in *ContentAddRequest, opts ...grpc.CallOption) (*ContentAddResponse, error)
	List(ctx context.Context, in *ContentListRequest, opts ...grpc.CallOption) (*ContentListResponse, error)
}

type contentClient struct {
	cc *grpc.ClientConn
}

func NewContentClient(cc *grpc.ClientConn) ContentClient {
	return &contentClient{cc}
}

func (c *contentClient) Add(ctx context.Context, in *ContentAddRequest, opts ...grpc.CallOption) (*ContentAddResponse, error) {
	out := new(ContentAddResponse)
	err := c.cc.Invoke(ctx, "/pb.Content/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentClient) List(ctx context.Context, in *ContentListRequest, opts ...grpc.CallOption) (*ContentListResponse, error) {
	out := new(ContentListResponse)
	err := c.cc.Invoke(ctx, "/pb.Content/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContentServer is the server API for Content service.
type ContentServer interface {
	Add(context.Context, *ContentAddRequest) (*ContentAddResponse, error)
	List(context.Context, *ContentListRequest) (*ContentListResponse, error)
}

// UnimplementedContentServer can be embedded to have forward compatible implementations.
type UnimplementedContentServer struct {
}

func (*UnimplementedContentServer) Add(ctx context.Context, req *ContentAddRequest) (*ContentAddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedContentServer) List(ctx context.Context, req *ContentListRequest) (*ContentListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterContentServer(s *grpc.Server, srv ContentServer) {
	s.RegisterService(&_Content_serviceDesc, srv)
}

func _Content_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Content/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).Add(ctx, req.(*ContentAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Content_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Content/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServer).List(ctx, req.(*ContentListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Content_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Content",
	HandlerType: (*ContentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Content_Add_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Content_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "content.proto",
}

func (m *ContentAddRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContentAddRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContentAddRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Body) > 0 {
		i -= len(m.Body)
		copy(dAtA[i:], m.Body)
		i = encodeVarintContent(dAtA, i, uint64(len(m.Body)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintContent(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ContentAddResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContentAddResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContentAddResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintContent(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ContentListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContentListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContentListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PageSize != 0 {
		i = encodeVarintContent(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintContent(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Columns) > 0 {
		for iNdEx := len(m.Columns) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Columns[iNdEx])
			copy(dAtA[i:], m.Columns[iNdEx])
			i = encodeVarintContent(dAtA, i, uint64(len(m.Columns[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ContentListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContentListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContentListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Total != 0 {
		i = encodeVarintContent(dAtA, i, uint64(m.Total))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Rows) > 0 {
		for iNdEx := len(m.Rows) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Rows[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintContent(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ContentListModel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContentListModel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContentListModel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CreateTime != 0 {
		i = encodeVarintContent(dAtA, i, uint64(m.CreateTime))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintContent(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintContent(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintContent(dAtA []byte, offset int, v uint64) int {
	offset -= sovContent(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ContentAddRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovContent(uint64(l))
	}
	l = len(m.Body)
	if l > 0 {
		n += 1 + l + sovContent(uint64(l))
	}
	return n
}

func (m *ContentAddResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovContent(uint64(m.Id))
	}
	return n
}

func (m *ContentListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Columns) > 0 {
		for _, s := range m.Columns {
			l = len(s)
			n += 1 + l + sovContent(uint64(l))
		}
	}
	if m.Page != 0 {
		n += 1 + sovContent(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovContent(uint64(m.PageSize))
	}
	return n
}

func (m *ContentListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Rows) > 0 {
		for _, e := range m.Rows {
			l = e.Size()
			n += 1 + l + sovContent(uint64(l))
		}
	}
	if m.Total != 0 {
		n += 1 + sovContent(uint64(m.Total))
	}
	return n
}

func (m *ContentListModel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovContent(uint64(m.Id))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovContent(uint64(l))
	}
	if m.CreateTime != 0 {
		n += 1 + sovContent(uint64(m.CreateTime))
	}
	return n
}

func sovContent(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozContent(x uint64) (n int) {
	return sovContent(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ContentAddRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowContent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContentAddRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContentAddRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipContent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthContent
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthContent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContentAddResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowContent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContentAddResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContentAddResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipContent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthContent
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthContent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContentListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowContent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContentListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContentListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Columns", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Columns = append(m.Columns, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipContent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthContent
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthContent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContentListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowContent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContentListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContentListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rows", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthContent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthContent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rows = append(m.Rows, &ContentListModel{})
			if err := m.Rows[len(m.Rows)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			m.Total = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Total |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipContent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthContent
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthContent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContentListModel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowContent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContentListModel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContentListModel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateTime", wireType)
			}
			m.CreateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipContent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthContent
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthContent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipContent(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowContent
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowContent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowContent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthContent
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupContent
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthContent
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthContent        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowContent          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupContent = fmt.Errorf("proto: unexpected end of group")
)
